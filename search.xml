<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>element UI实现动态生成多级表头</title>
      <link href="/2019/05/05/element-UI%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90%E5%A4%9A%E7%BA%A7%E8%A1%A8%E5%A4%B4/"/>
      <url>/2019/05/05/element-UI%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90%E5%A4%9A%E7%BA%A7%E8%A1%A8%E5%A4%B4/</url>
      
        <content type="html"><![CDATA[<div class="post"><br><br>    <h1 class="postTitle"><br>            <a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/llcdxh/p/9473458.html" target="_blank" rel="noopener">element UI实现动态生成多级表头</a><br>        </h1><br><br><strong>一、效果图</strong><br><br><img src="https://images2018.cnblogs.com/blog/1429393/201808/1429393-20180816195340083-491882635.png" alt><br><br><img src="https://images2018.cnblogs.com/blog/1429393/201808/1429393-20180816195421784-1185412164.png" alt><br><br><strong>二、封装两个组件，分别为DynamicTable.vue和TableColumn.vue，TableColumn.vue主要是使用递归来对表头进行循环生成</strong><br><br>DynamicTable.vue<br><br><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0" target="_blank" rel="noopener"><img src="//common.cnblogs.com/images/copycode.gif" alt="复制代码"></a>; “复制代码”)</span></div><br><pre><span style="color: #008080;"> 1</span> &lt;template&gt;<br><span style="color: #008080;"> 2</span>   &lt;el-table :data=”tableData” border :height=”height”&gt;<br><span style="color: #008080;"> 3</span>     &lt;template v-<span style="color: #0000ff;">for</span>=”item in tableHeader”&gt;<br><span style="color: #008080;"> 4</span>       &lt;table-column v-<span style="color: #0000ff;">if</span>=”item.children &amp;&amp; item.children.length” :key=”item.id” :coloumn-header=”item”&gt;&lt;/table-column&gt;<br><span style="color: #008080;"> 5</span>       &lt;el-table-column v-<span style="color: #0000ff;">else</span> :key=”item.id” :label=”item.label” :prop=”item.prop” align=”center”&gt;&lt;/el-table-column&gt;<br><span style="color: #008080;"> 6</span>     &lt;/template&gt;<br><span style="color: #008080;"> 7</span>   &lt;/el-table&gt;<br><span style="color: #008080;"> 8</span> &lt;/template&gt;<br><span style="color: #008080;"> 9</span><br><span style="color: #008080;">10</span> &lt;script&gt;<br><span style="color: #008080;">11</span> import TableColumn from ‘./TableColumn’<br><span style="color: #008080;">12</span> export <span style="color: #0000ff;">default</span><span style="color: #000000;"> {<br></span><span style="color: #008080;">13</span> <span style="color: #000000;">  props: {<br></span><span style="color: #008080;">14</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> 表格的数据</span><br><span style="color: #008080;">15</span> <span style="color: #000000;">    tableData: {<br></span><span style="color: #008080;">16</span> <span style="color: #000000;">      type: Array,<br></span><span style="color: #008080;">17</span>       required: <span style="color: #0000ff;">true</span><br><span style="color: #008080;">18</span> <span style="color: #000000;">    },<br></span><span style="color: #008080;">19</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> 多级表头的数据</span><br><span style="color: #008080;">20</span> <span style="color: #000000;">    tableHeader: {<br></span><span style="color: #008080;">21</span> <span style="color: #000000;">      type: Array,<br></span><span style="color: #008080;">22</span>       required: <span style="color: #0000ff;">true</span><br><span style="color: #008080;">23</span> <span style="color: #000000;">    },<br></span><span style="color: #008080;">24</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> 表格的高度</span><br><span style="color: #008080;">25</span> <span style="color: #000000;">    height: {<br></span><span style="color: #008080;">26</span> <span style="color: #000000;">      type: String,<br></span><span style="color: #008080;">27</span>       <span style="color: #0000ff;">default</span>: ‘300’<br><span style="color: #008080;">28</span> <span style="color: #000000;">    }<br></span><span style="color: #008080;">29</span> <span style="color: #000000;">  },<br></span><span style="color: #008080;">30</span> <span style="color: #000000;">  components: {<br></span><span style="color: #008080;">31</span> <span style="color: #000000;">    TableColumn<br></span><span style="color: #008080;">32</span> <span style="color: #000000;">  }<br></span><span style="color: #008080;">33</span> <span style="color: #000000;">}<br></span><span style="color: #008080;">34</span> &lt;/script&gt;<br><span style="color: #008080;">35</span><br><span style="color: #008080;">36</span> &lt;style scoped&gt;<br><span style="color: #008080;">37</span><br><span style="color: #008080;">38</span> &lt;/style&gt;</pre><br><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0" target="_blank" rel="noopener"><img src="//common.cnblogs.com/images/copycode.gif" alt="复制代码"></a>; “复制代码”)</span></div></div><p>TableColumn.vue</p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0" target="_blank" rel="noopener"><img src="//common.cnblogs.com/images/copycode.gif" alt="复制代码"></a>; “复制代码”)</span></div><br><pre>&lt;template&gt;<br>  &lt;el-table-column :label=”coloumnHeader.label” :prop=”coloumnHeader.label” align=”center”&gt;<br>    &lt;template v-<span style="color: #0000ff;">for</span>=”item in coloumnHeader.children”&gt;<br>      &lt;tableColumn v-<span style="color: #0000ff;">if</span>=”item.children &amp;&amp; item.children.length” :key=”item.id” :coloumn-header=”item”&gt;&lt;/tableColumn&gt;<br>      &lt;el-table-column v-<span style="color: #0000ff;">else</span> :key=”item.name” :label=”item.label” :prop=”item.prop” align=”center”&gt;&lt;/el-table-column&gt;<br>    &lt;/template&gt;<br>  &lt;/el-table-column&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<span style="color: #000000;"><br>export </span><span style="color: #0000ff;">default</span><span style="color: #000000;"> {<br>  name: </span>‘tableColumn’<span style="color: #000000;">,<br>  props: {<br>    coloumnHeader: {<br>      type: Object,<br>      required: </span><span style="color: #0000ff;">true</span><span style="color: #000000;"><br>    }<br>  }<br>}<br></span>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br><br>&lt;/style&gt;</pre><br><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0" target="_blank" rel="noopener"><img src="//common.cnblogs.com/images/copycode.gif" alt="复制代码"></a>; “复制代码”)</span></div></div><p><strong>三、使用</strong></p><p>HTML代码</p><div class="cnblogs_code"><br><pre><span style="color: #008080;">1</span>     &lt;div class=”result-wrapper”&gt;<br><span style="color: #008080;">2</span>       &lt;dynamic-table :table-data=”tableData” :table-header=”tableConfig” v-<span style="color: #0000ff;">if</span>=”dynamicTableShow”&gt;&lt;/dynamic-table&gt;<br><span style="color: #008080;">3</span>       &lt;dynamic-form v-<span style="color: #0000ff;">else</span>&gt;&lt;/dynamic-form&gt;<br><span style="color: #008080;">4</span>     &lt;/div&gt;</pre><br></div><p>JS代码</p><p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0" target="_blank" rel="noopener"><img src="//common.cnblogs.com/images/copycode.gif" alt="复制代码"></a>; “复制代码”)</span></div></div></p><pre><span style="color: #008080;">  1</span> &lt;script&gt;<span style="color: #008080;">  2</span> import DynamicTable from './components/DynamicTable'<span style="color: #008080;">  3</span> export <span style="color: #0000ff;">default</span><span style="color: #000000;"> {</span><span style="color: #008080;">  4</span> <span style="color: #000000;">  components: {</span><span style="color: #008080;">  5</span> <span style="color: #000000;">    DynamicTable</span><span style="color: #008080;">  6</span> <span style="color: #000000;">  },</span><span style="color: #008080;">  7</span> <span style="color: #000000;">  data () {</span><span style="color: #008080;">  8</span>     <span style="color: #0000ff;">return</span><span style="color: #000000;"> {</span><span style="color: #008080;">  9</span> <span style="color: #000000;">      searchForm: {</span><span style="color: #008080;"> 10</span> <span style="color: #000000;">        month: getMonth(),</span><span style="color: #008080;"> 11</span>         serviceCategory: '1'<span style="color: #008080;"> 12</span> <span style="color: #000000;">      },</span><span style="color: #008080;"> 13</span>       dynamicTableShow: <span style="color: #0000ff;">true</span>, <span style="color: #008000;">//</span><span style="color: #008000;"> 使得DynamicTable组件重新渲染变量</span><span style="color: #008080;"> 14</span>       <span style="color: #008000;">//</span><span style="color: #008000;"> 表数据</span><span style="color: #008080;"> 15</span> <span style="color: #000000;">      tableData: [</span><span style="color: #008080;"> 16</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 17</span>           districtName: '1'<span style="color: #000000;">,</span><span style="color: #008080;"> 18</span>           timeDimension: '2'<span style="color: #000000;">,</span><span style="color: #008080;"> 19</span>           residentPopNum: '3'<span style="color: #000000;">,</span><span style="color: #008080;"> 20</span>           residentPopDst: '4'<span style="color: #000000;">,</span><span style="color: #008080;"> 21</span>           liveLandArea: '5'<span style="color: #000000;">,</span><span style="color: #008080;"> 22</span>           liveLandDst: '6'<span style="color: #000000;">,</span><span style="color: #008080;"> 23</span>           employmentLandArea: '7'<span style="color: #000000;">,</span><span style="color: #008080;"> 24</span>           employmentLandDst: '8'<span style="color: #008080;"> 25</span> <span style="color: #000000;">        }</span><span style="color: #008080;"> 26</span> <span style="color: #000000;">      ],</span><span style="color: #008080;"> 27</span>       <span style="color: #008000;">//</span><span style="color: #008000;"> 表头数据</span><span style="color: #008080;"> 28</span> <span style="color: #000000;">      tableConfig: [</span><span style="color: #008080;"> 29</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 30</span>           id: 100<span style="color: #000000;">,</span><span style="color: #008080;"> 31</span>           label: '一级表头'<span style="color: #000000;">,</span><span style="color: #008080;"> 32</span>           prop: ''<span style="color: #000000;">,</span><span style="color: #008080;"> 33</span> <span style="color: #000000;">          children: [</span><span style="color: #008080;"> 34</span> <span style="color: #000000;">            {</span><span style="color: #008080;"> 35</span>               id: 110<span style="color: #000000;">,</span><span style="color: #008080;"> 36</span>               label: '二级表头1'<span style="color: #000000;">,</span><span style="color: #008080;"> 37</span>               prop: 'districtName'<span style="color: #008080;"> 38</span> <span style="color: #000000;">            },</span><span style="color: #008080;"> 39</span> <span style="color: #000000;">            {</span><span style="color: #008080;"> 40</span>               id: 120<span style="color: #000000;">,</span><span style="color: #008080;"> 41</span>               label: '二级表头2'<span style="color: #000000;">,</span><span style="color: #008080;"> 42</span>               prop: 'timeDimension'<span style="color: #008080;"> 43</span> <span style="color: #000000;">            }</span><span style="color: #008080;"> 44</span> <span style="color: #000000;">          ]</span><span style="color: #008080;"> 45</span> <span style="color: #000000;">        },</span><span style="color: #008080;"> 46</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 47</span>           id: 200<span style="color: #000000;">,</span><span style="color: #008080;"> 48</span>           label: '一级表头1'<span style="color: #000000;">,</span><span style="color: #008080;"> 49</span>           prop: ''<span style="color: #000000;">,</span><span style="color: #008080;"> 50</span> <span style="color: #000000;">          children: [</span><span style="color: #008080;"> 51</span> <span style="color: #000000;">            {</span><span style="color: #008080;"> 52</span>               id: 210<span style="color: #000000;">,</span><span style="color: #008080;"> 53</span>               label: '二级表头2'<span style="color: #000000;">,</span><span style="color: #008080;"> 54</span>               prop: ''<span style="color: #000000;">,</span><span style="color: #008080;"> 55</span> <span style="color: #000000;">              children: [</span><span style="color: #008080;"> 56</span> <span style="color: #000000;">                {</span><span style="color: #008080;"> 57</span>                   id: 211<span style="color: #000000;">,</span><span style="color: #008080;"> 58</span>                   label: '三级表头3'<span style="color: #000000;">,</span><span style="color: #008080;"> 59</span>                   prop: 'residentPopNum'<span style="color: #008080;"> 60</span> <span style="color: #000000;">                },</span><span style="color: #008080;"> 61</span> <span style="color: #000000;">                {</span><span style="color: #008080;"> 62</span>                   id: 212<span style="color: #000000;">,</span><span style="color: #008080;"> 63</span>                   label: '三级表头'<span style="color: #000000;">,</span><span style="color: #008080;"> 64</span>                   prop: 'residentPopDst'<span style="color: #008080;"> 65</span> <span style="color: #000000;">                }</span><span style="color: #008080;"> 66</span> <span style="color: #000000;">              ]</span><span style="color: #008080;"> 67</span> <span style="color: #000000;">            }</span><span style="color: #008080;"> 68</span> <span style="color: #000000;">          ]</span><span style="color: #008080;"> 69</span> <span style="color: #000000;">        },</span><span style="color: #008080;"> 70</span> <span style="color: #000000;">        {</span><span style="color: #008080;"> 71</span>           id: 300<span style="color: #000000;">,</span><span style="color: #008080;"> 72</span>           label: '一级表头1'<span style="color: #000000;">,</span><span style="color: #008080;"> 73</span>           prop: ''<span style="color: #000000;">,</span><span style="color: #008080;"> 74</span> <span style="color: #000000;">          children: [</span><span style="color: #008080;"> 75</span> <span style="color: #000000;">            {</span><span style="color: #008080;"> 76</span>               id: 310<span style="color: #000000;">,</span><span style="color: #008080;"> 77</span>               label: '二级表头2'<span style="color: #000000;">,</span><span style="color: #008080;"> 78</span>               prop: ''<span style="color: #000000;">,</span><span style="color: #008080;"> 79</span> <span style="color: #000000;">              children: [</span><span style="color: #008080;"> 80</span> <span style="color: #000000;">                {</span><span style="color: #008080;"> 81</span>                   id: 311<span style="color: #000000;">,</span><span style="color: #008080;"> 82</span>                   label: '三级表头3'<span style="color: #000000;">,</span><span style="color: #008080;"> 83</span>                   prop: 'liveLandArea'<span style="color: #008080;"> 84</span> <span style="color: #000000;">                },</span><span style="color: #008080;"> 85</span> <span style="color: #000000;">                {</span><span style="color: #008080;"> 86</span>                   id: 312<span style="color: #000000;">,</span><span style="color: #008080;"> 87</span>                   label: '三级表头3'<span style="color: #000000;">,</span><span style="color: #008080;"> 88</span>                   prop: 'liveLandDst'<span style="color: #008080;"> 89</span> <span style="color: #000000;">                }</span><span style="color: #008080;"> 90</span> <span style="color: #000000;">              ]</span><span style="color: #008080;"> 91</span> <span style="color: #000000;">            },</span><span style="color: #008080;"> 92</span> <span style="color: #000000;">            {</span><span style="color: #008080;"> 93</span>               id: 320<span style="color: #000000;">,</span><span style="color: #008080;"> 94</span>               label: '二级表头1'<span style="color: #000000;">,</span><span style="color: #008080;"> 95</span>               prop: ''<span style="color: #000000;">,</span><span style="color: #008080;"> 96</span> <span style="color: #000000;">              children: [</span><span style="color: #008080;"> 97</span> <span style="color: #000000;">                {</span><span style="color: #008080;"> 98</span>                   id: 321<span style="color: #000000;">,</span><span style="color: #008080;"> 99</span>                   label: '三级表头3'<span style="color: #000000;">,</span><span style="color: #008080;">100</span>                   prop: 'employmentLandArea'<span style="color: #008080;">101</span> <span style="color: #000000;">                },</span><span style="color: #008080;">102</span> <span style="color: #000000;">                {</span><span style="color: #008080;">103</span>                   id: 322<span style="color: #000000;">,</span><span style="color: #008080;">104</span>                   label: '三级表头3'<span style="color: #000000;">,</span><span style="color: #008080;">105</span>                   prop: 'employmentLandDst'<span style="color: #008080;">106</span> <span style="color: #000000;">                }</span><span style="color: #008080;">107</span> <span style="color: #000000;">              ]</span><span style="color: #008080;">108</span> <span style="color: #000000;">            }</span><span style="color: #008080;">109</span> <span style="color: #000000;">          ]</span><span style="color: #008080;">110</span> <span style="color: #000000;">        }</span><span style="color: #008080;">111</span> <span style="color: #000000;">      ]</span><span style="color: #008080;">112</span> <span style="color: #000000;">    }</span><span style="color: #008080;">113</span> <span style="color: #000000;">  },</span><span style="color: #008080;">114</span> <span style="color: #000000;">  methods: {</span><span style="color: #008080;">115</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> 服务类型改变的时候，需要重新请求表头信息和表格数据</span><span style="color: #008080;">116</span> <span style="color: #000000;">    handleServiceCategoryChange (val) {</span><span style="color: #008080;">117</span>       <span style="color: #008000;">//</span><span style="color: #008000;"> 设置dynamicTableShow为false，使得DynamicTable组件重新渲染</span><span style="color: #008080;">118</span>       <span style="color: #0000ff;">this</span>.dynamicTableShow = <span style="color: #0000ff;">false</span><span style="color: #008080;">119</span>       <span style="color: #0000ff;">if</span> (val === '1'<span style="color: #000000;">) {</span><span style="color: #008080;">120</span>         <span style="color: #0000ff;">this</span>.tableData =<span style="color: #000000;"> [</span><span style="color: #008080;">121</span> <span style="color: #000000;">          {</span><span style="color: #008080;">122</span>             districtName: '1'<span style="color: #000000;">,</span><span style="color: #008080;">123</span>             timeDimension: '2'<span style="color: #000000;">,</span><span style="color: #008080;">124</span>             residentPopNum: '3'<span style="color: #000000;">,</span><span style="color: #008080;">125</span>             residentPopDst: '4'<span style="color: #000000;">,</span><span style="color: #008080;">126</span>             liveLandArea: '5'<span style="color: #000000;">,</span><span style="color: #008080;">127</span>             liveLandDst: '6'<span style="color: #000000;">,</span><span style="color: #008080;">128</span>             employmentLandArea: '7'<span style="color: #000000;">,</span><span style="color: #008080;">129</span>             employmentLandDst: '8'<span style="color: #008080;">130</span> <span style="color: #000000;">          }</span><span style="color: #008080;">131</span> <span style="color: #000000;">        ]</span><span style="color: #008080;">132</span>         <span style="color: #0000ff;">this</span>.tableConfig =<span style="color: #000000;"> [</span><span style="color: #008080;">133</span> <span style="color: #000000;">          {</span><span style="color: #008080;">134</span>             id: 100<span style="color: #000000;">,</span><span style="color: #008080;">135</span>             label: '一级表头'<span style="color: #000000;">,</span><span style="color: #008080;">136</span>             prop: ''<span style="color: #000000;">,</span><span style="color: #008080;">137</span> <span style="color: #000000;">            children: [</span><span style="color: #008080;">138</span> <span style="color: #000000;">              {</span><span style="color: #008080;">139</span>                 id: 110<span style="color: #000000;">,</span><span style="color: #008080;">140</span>                 label: '二级表头1'<span style="color: #000000;">,</span><span style="color: #008080;">141</span>                 prop: 'districtName'<span style="color: #008080;">142</span> <span style="color: #000000;">              },</span><span style="color: #008080;">143</span> <span style="color: #000000;">              {</span><span style="color: #008080;">144</span>                 id: 120<span style="color: #000000;">,</span><span style="color: #008080;">145</span>                 label: '二级表头2'<span style="color: #000000;">,</span><span style="color: #008080;">146</span>                 prop: 'timeDimension'<span style="color: #008080;">147</span> <span style="color: #000000;">              }</span><span style="color: #008080;">148</span> <span style="color: #000000;">            ]</span><span style="color: #008080;">149</span> <span style="color: #000000;">          },</span><span style="color: #008080;">150</span> <span style="color: #000000;">          {</span><span style="color: #008080;">151</span>             id: 200<span style="color: #000000;">,</span><span style="color: #008080;">152</span>             label: '一级表头1'<span style="color: #000000;">,</span><span style="color: #008080;">153</span>             prop: ''<span style="color: #000000;">,</span><span style="color: #008080;">154</span> <span style="color: #000000;">            children: [</span><span style="color: #008080;">155</span> <span style="color: #000000;">              {</span><span style="color: #008080;">156</span>                 id: 210<span style="color: #000000;">,</span><span style="color: #008080;">157</span>                 label: '二级表头2'<span style="color: #000000;">,</span><span style="color: #008080;">158</span>                 prop: ''<span style="color: #000000;">,</span><span style="color: #008080;">159</span> <span style="color: #000000;">                children: [</span><span style="color: #008080;">160</span> <span style="color: #000000;">                  {</span><span style="color: #008080;">161</span>                     id: 211<span style="color: #000000;">,</span><span style="color: #008080;">162</span>                     label: '三级表头3'<span style="color: #000000;">,</span><span style="color: #008080;">163</span>                     prop: 'residentPopNum'<span style="color: #008080;">164</span> <span style="color: #000000;">                  },</span><span style="color: #008080;">165</span> <span style="color: #000000;">                  {</span><span style="color: #008080;">166</span>                     id: 212<span style="color: #000000;">,</span><span style="color: #008080;">167</span>                     label: '三级表头'<span style="color: #000000;">,</span><span style="color: #008080;">168</span>                     prop: 'residentPopDst'<span style="color: #008080;">169</span> <span style="color: #000000;">                  }</span><span style="color: #008080;">170</span> <span style="color: #000000;">                ]</span><span style="color: #008080;">171</span> <span style="color: #000000;">              }</span><span style="color: #008080;">172</span> <span style="color: #000000;">            ]</span><span style="color: #008080;">173</span> <span style="color: #000000;">          },</span><span style="color: #008080;">174</span> <span style="color: #000000;">          {</span><span style="color: #008080;">175</span>             id: 300<span style="color: #000000;">,</span><span style="color: #008080;">176</span>             label: '一级表头1'<span style="color: #000000;">,</span><span style="color: #008080;">177</span>             prop: ''<span style="color: #000000;">,</span><span style="color: #008080;">178</span> <span style="color: #000000;">            children: [</span><span style="color: #008080;">179</span> <span style="color: #000000;">              {</span><span style="color: #008080;">180</span>                 id: 310<span style="color: #000000;">,</span><span style="color: #008080;">181</span>                 label: '二级表头2'<span style="color: #000000;">,</span><span style="color: #008080;">182</span>                 prop: ''<span style="color: #000000;">,</span><span style="color: #008080;">183</span> <span style="color: #000000;">                children: [</span><span style="color: #008080;">184</span> <span style="color: #000000;">                  {</span><span style="color: #008080;">185</span>                     id: 311<span style="color: #000000;">,</span><span style="color: #008080;">186</span>                     label: '三级表头3'<span style="color: #000000;">,</span><span style="color: #008080;">187</span>                     prop: 'liveLandArea'<span style="color: #008080;">188</span> <span style="color: #000000;">                  },</span><span style="color: #008080;">189</span> <span style="color: #000000;">                  {</span><span style="color: #008080;">190</span>                     id: 312<span style="color: #000000;">,</span><span style="color: #008080;">191</span>                     label: '三级表头3'<span style="color: #000000;">,</span><span style="color: #008080;">192</span>                     prop: 'liveLandDst'<span style="color: #008080;">193</span> <span style="color: #000000;">                  }</span><span style="color: #008080;">194</span> <span style="color: #000000;">                ]</span><span style="color: #008080;">195</span> <span style="color: #000000;">              },</span><span style="color: #008080;">196</span> <span style="color: #000000;">              {</span><span style="color: #008080;">197</span>                 id: 320<span style="color: #000000;">,</span><span style="color: #008080;">198</span>                 label: '二级表头1'<span style="color: #000000;">,</span><span style="color: #008080;">199</span>                 prop: ''<span style="color: #000000;">,</span><span style="color: #008080;">200</span> <span style="color: #000000;">                children: [</span><span style="color: #008080;">201</span> <span style="color: #000000;">                  {</span><span style="color: #008080;">202</span>                     id: 321<span style="color: #000000;">,</span><span style="color: #008080;">203</span>                     label: '三级表头3'<span style="color: #000000;">,</span><span style="color: #008080;">204</span>                     prop: 'employmentLandArea'<span style="color: #008080;">205</span> <span style="color: #000000;">                  },</span><span style="color: #008080;">206</span> <span style="color: #000000;">                  {</span><span style="color: #008080;">207</span>                     id: 322<span style="color: #000000;">,</span><span style="color: #008080;">208</span>                     label: '三级表头3'<span style="color: #000000;">,</span><span style="color: #008080;">209</span>                     prop: 'employmentLandDst'<span style="color: #008080;">210</span> <span style="color: #000000;">                  }</span><span style="color: #008080;">211</span> <span style="color: #000000;">                ]</span><span style="color: #008080;">212</span> <span style="color: #000000;">              }</span><span style="color: #008080;">213</span> <span style="color: #000000;">            ]</span><span style="color: #008080;">214</span> <span style="color: #000000;">          }</span><span style="color: #008080;">215</span> <span style="color: #000000;">        ]</span><span style="color: #008080;">216</span>       } <span style="color: #0000ff;">else</span><span style="color: #000000;"> {</span><span style="color: #008080;">217</span>         <span style="color: #0000ff;">this</span>.tableData =<span style="color: #000000;"> [</span><span style="color: #008080;">218</span> <span style="color: #000000;">          {</span><span style="color: #008080;">219</span>             districtName: '111'<span style="color: #000000;">,</span><span style="color: #008080;">220</span>             timeDimension: '222'<span style="color: #008080;">221</span> <span style="color: #000000;">          }</span><span style="color: #008080;">222</span> <span style="color: #000000;">        ]</span><span style="color: #008080;">223</span>         <span style="color: #0000ff;">this</span>.tableConfig =<span style="color: #000000;"> [</span><span style="color: #008080;">224</span> <span style="color: #000000;">          {</span><span style="color: #008080;">225</span>             id: 100<span style="color: #000000;">,</span><span style="color: #008080;">226</span>             label: '一级表头'<span style="color: #000000;">,</span><span style="color: #008080;">227</span>             prop: ''<span style="color: #000000;">,</span><span style="color: #008080;">228</span> <span style="color: #000000;">            children: [</span><span style="color: #008080;">229</span> <span style="color: #000000;">              {</span><span style="color: #008080;">230</span>                 id: 110<span style="color: #000000;">,</span><span style="color: #008080;">231</span>                 label: '二级表头1'<span style="color: #000000;">,</span><span style="color: #008080;">232</span>                 prop: 'districtName'<span style="color: #008080;">233</span> <span style="color: #000000;">              },</span><span style="color: #008080;">234</span> <span style="color: #000000;">              {</span><span style="color: #008080;">235</span>                 id: 120<span style="color: #000000;">,</span><span style="color: #008080;">236</span>                 label: '二级表头2'<span style="color: #000000;">,</span><span style="color: #008080;">237</span>                 prop: 'timeDimension'<span style="color: #008080;">238</span> <span style="color: #000000;">              }</span><span style="color: #008080;">239</span> <span style="color: #000000;">            ]</span><span style="color: #008080;">240</span> <span style="color: #000000;">          }</span><span style="color: #008080;">241</span> <span style="color: #000000;">        ]</span><span style="color: #008080;">242</span> <span style="color: #000000;">      }</span><span style="color: #008080;">243</span>       <span style="color: #008000;">//</span><span style="color: #008000;"> 此处是DOM还没有更新，此处的代码是必须的</span><span style="color: #008080;">244</span>       <span style="color: #0000ff;">this</span>.$nextTick(() =&gt;<span style="color: #000000;"> {</span><span style="color: #008080;">245</span>         <span style="color: #008000;">//</span><span style="color: #008000;"> DOM 现在更新了</span><span style="color: #008080;">246</span>         <span style="color: #0000ff;">this</span>.dynamicTableShow = <span style="color: #0000ff;">true</span><span style="color: #008080;">247</span> <span style="color: #000000;">      })</span><span style="color: #008080;">248</span> <span style="color: #000000;">    }</span><span style="color: #008080;">249</span> <span style="color: #000000;">  }</span><span style="color: #008080;">250</span> <span style="color: #000000;">}</span><span style="color: #008080;">251</span> &lt;/script&gt;<span style="color: #008080;">252</span> <span style="color: #008080;">253</span> &lt;style scoped&gt;<span style="color: #008080;">254</span> .policy-<span style="color: #000000;">wrapper{</span><span style="color: #008080;">255</span>   margin-<span style="color: #000000;">top: 10px;</span><span style="color: #008080;">256</span> <span style="color: #000000;">}</span><span style="color: #008080;">257</span> .result-<span style="color: #000000;">wrapper{</span><span style="color: #008080;">258</span>   margin-<span style="color: #000000;">top: 22px;</span><span style="color: #008080;">259</span> <span style="color: #000000;">}</span><span style="color: #008080;">260</span> &lt;/style&gt;</pre></div>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flutter踩坑记录之IOS输入框长按报错</title>
      <link href="/2019/03/08/flutter%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95%E4%B9%8BIOS%E8%BE%93%E5%85%A5%E6%A1%86%E9%95%BF%E6%8C%89%E6%8A%A5%E9%94%99/"/>
      <url>/2019/03/08/flutter%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95%E4%B9%8BIOS%E8%BE%93%E5%85%A5%E6%A1%86%E9%95%BF%E6%8C%89%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<p><div data-note-content class="show-content"><br>    <div class="show-content-free"></div></div></p><p>开发过程中发现在国际化过程中ios输入框长按会报错 flutter: Another exception was thrown: NoSuchMethodError: The getter ‘pasteButtonLabel’ was called on null. 本篇说明解决方法:</p><p>1.首先在pubspec.yaml的dependencies下加入这个</p><p>flutter_localizations:</p><p> sdk: flutter</p><p>如图：</p><p><img src="https://ws3.sinaimg.cn/large/005BYqpgly1g0v8hib5bxj30fq04oaa0.jpg" alt></p><p>2.然后在MaterialApp设置一下localizationsDelegates如图:</p><p> <img src="https://ws3.sinaimg.cn/large/005BYqpgly1g0v8hiin2lj30rs0uywft.jpg" alt></p><p>3.写一个类继承一下CupertinoLocalizations，在项目中<br>            我这个类名叫ChineseCupertinoLocalizations(没错，就是localizationsDelegates中的第三个)，如图：<br> <img src="https://ws3.sinaimg.cn/large/005BYqpggy1g0v8hidodej30rs0qbmy8.jpg" alt><br> <img src="https://ws3.sinaimg.cn/large/005BYqpgly1g0v92z3vtvj30rs0ps0tb.jpg" alt><br> <img src="https://ws3.sinaimg.cn/large/005BYqpggy1g0v8hidhsrj30rs0hhjs5.jpg" alt><br> <img src="https://ws3.sinaimg.cn/large/005BYqpggy1g0v8hidhsrj30rs0hhjs5.jpg" alt><br>上次提到报错的原因就是因为cutButtonLabel，copyButtonLabel，pasteButtonLabel，selectAllButtonLabel<br>            这几个按钮没有实现，所以继承CupertinoLocalizations一定要为这几个按钮赋值，这里是那种语言，那么，赋值就对应那种语言，同时要注意locale.languageCode也要填写，如果你是中文，那么locale.languageCode<br>            ==’zh’;</p><p>4.在ios工程中，在项目的info设置语言环境</p><p>添加 Localization native development region—&gt;china</p><p>添加一个Localizations 为array类型的，并且设置值为 Chinese (simplified)</p><p><img src="https://ws3.sinaimg.cn/large/005BYqpgly1g0v8hihgatj30rs0lfjs9.jpg" alt></p><p>效果图：（<strong>注意：请把手机环境调试成中文的语言环境</strong>）</p><p>Android<br><img src="https://ws3.sinaimg.cn/large/005BYqpggy1g0v8hicjlhj30la13m0t8.jpg" alt></p><p>ios 效果图<br><img src="https://ws3.sinaimg.cn/large/005BYqpggy1g0vcyv7cdqj30ou1ca74p.jpg" alt></p><p>github地址</p><p><a href="https://github.com/hxxsocket/flutter_lg_demo" target="_blank" rel="noopener">https://github.com/hxxsocket/flutter_lg_demo</a></p>]]></content>
      
      
      <categories>
          
          <category> flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Admin Deploy踩坑记录</title>
      <link href="/2019/03/01/Hexo-Admin-Deploy%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/03/01/Hexo-Admin-Deploy%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/jaredly/hexo-admin/issues/94" target="_blank" rel="noopener">hexo-admin/issues</a></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>由于Windows的某种原因，依据网站的大部分教程，均会抛出<code>deploy Error: spawn UNKNOWN</code>异常。而GitHub上issues给出了相关解决方案，现在总结一下具体的过程</p><h2 id="填坑"><a href="#填坑" class="headerlink" title="填坑"></a>填坑</h2><ul><li><p>打开站点配置文件(<code>\xxxx.github.io\_config.yml</code>)，在<code>admin</code>中加入<code>deployCommand: &amp;#39;sh hexo-deploy.sh&amp;#39;</code>。示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">admin:</span><br><span class="line">  username: 看不见</span><br><span class="line">  password_hash: 看不见</span><br><span class="line">  secret: 看不见</span><br><span class="line">  deployCommand: &apos;sh hexo-deploy.sh&apos;</span><br></pre></td></tr></table></figure></li><li><p>在根目录中(<code>\xxxx.github.io\</code>)新建<code>hexo-deploy.sh</code>文件，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></li><li><p>打开deploy.js(<code>\xxxx.github.io\node_modules\hexo-admin\deploy.js</code>)，将<code>var proc = spawn(command, [message], {detached: true});</code>更改为<code>var proc = spawn((process.platform === &amp;quot;win32&amp;quot; ? &amp;quot;hexo.cmd&amp;quot; : &amp;quot;hexo&amp;quot;), [&amp;#39;d&amp;#39;, &amp;#39;-g&amp;#39;]);</code><br>更改完后的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">module.exports = function (command, message, done) &#123;</span><br><span class="line">  done = once(done);</span><br><span class="line">  var proc = spawn((process.platform === &quot;win32&quot; ? &quot;hexo.cmd&quot; : &quot;hexo&quot;), [&apos;d&apos;, &apos;-g&apos;]);</span><br><span class="line">  var stdout = &apos;&apos;;</span><br><span class="line">  var stderr = &apos;&apos;;</span><br><span class="line">  proc.stdout.on(&apos;data&apos;, function(data)&#123;stdout += data.toString()&#125;)</span><br><span class="line">  proc.stderr.on(&apos;data&apos;, function(data)&#123;stderr += data.toString()&#125;)</span><br><span class="line">  proc.on(&apos;error&apos;, function(err) &#123;</span><br><span class="line">    done(err, &#123;stdout: stdout, stderr: stderr&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  proc.on(&apos;close&apos;, function () &#123;</span><br><span class="line">    done(null, &#123;stdout: stdout, stderr: stderr&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="http://hlx-blog.oss-cn-beijing.aliyuncs.com/18-5-1/52473923.jpg" alt="效果图"></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo admin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git 常用命令(含删除文件)</title>
      <link href="/2019/03/01/%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/03/01/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>0.可以通过git branch -r 命令查看远端库的分支情况</p><p>&nbsp;<img src="http://bmob-cdn-23872.b0.upaiyun.com/2019/03/01/23dbdac54057592f80677bdcb7e2dbf0.png" alt></p><p>1,从已有的分支创建新的分支(如从master分支),创建一个dev分支</p><p>git checkout -b dev</p><p>2,创建完可以查看一下,分支已经切换到dev</p><p>git branch</p><p>&nbsp;&nbsp;&nbsp;&nbsp;* dev</p><p>&nbsp;&nbsp;&nbsp;&nbsp;master</p><p>3.建立本地到上游（远端）仓的链接 –这样代码才能提交上去</p><p><strong>git branch –set-upstream-to=origin/dev&nbsp;</strong></p><p><strong>取消对master的跟踪</strong></p><p><strong>git branch –unset-upstream master</strong></p><p>&nbsp;</p><p>git 创建分支提交远程分支 - oppotvr<br><a href="https://my.oschina.net/u/219482/blog/285584" target="_blank" rel="noopener">https://my.oschina.net/u/219482/blog/285584</a></p><p>&nbsp;</p><p>以下两个应该是同一个意思，=upstream : 上游码流的意思<br><strong>git branch –set-upstream-to=master</strong><br>git branch –set-upstream-to=original/master</p><p>git help branch<br>git branch [–set-upstream | –track | –no-track] [-l] [-f] &lt;branchname&gt; [&lt;start-point&gt;]<br>git branch (–set-upstream-to=&lt;upstream&gt; | -u &lt;upstream&gt;) [&lt;branchname&gt;]<br>git branch –unset-upstream [&lt;branchname&gt;]</p><p>git branch –set-upstream-to=original/master new<br><strong>git branch –set-upstream debug origin/debug    //其中debug为创建的分支</strong></p><p>&nbsp;</p><p>提交该分支到远程仓库<br>git push origin dev</p><hr><h1 id="git-push-origin与git-push-u-origin-master的区别"><a href="#git-push-origin与git-push-u-origin-master的区别" class="headerlink" title="git push origin与git push -u origin master的区别"></a><a href="https://www.cnblogs.com/zhouj850/p/7260558.html" target="_blank" rel="noopener">git push origin与git push -u origin master的区别</a></h1><p><div class="clear">&nbsp;</div></p><p><div class="postBody"></div></p><div id="cnblogs_post_body" class="blogpost-body"><p><span lang="EN-US">$ git push origin</span></p><p>上面命令表示，将当前分支推送到<span lang="EN-US">origin主机的对应分支。<span lang="EN-US">&nbsp;</span></span></p><p>如果当前分支只有一个追踪分支，那么主机名都可以省略。<span lang="EN-US">&nbsp;</span></p><p><span lang="EN-US">$ git push 如果当前分支与多个主机存在追踪关系，那么这个时候<span lang="EN-US">-u选项会指定一个默认主机，这样后面就可以不加任何参数使用<span lang="EN-US">git push。</span></span></span></p><p><span lang="EN-US">$ git push -u origin master 上面命令将本地的<span lang="EN-US">master分支推送到<span lang="EN-US">origin主机，同时指定<span lang="EN-US">origin为默认主机，后面就可以不加任何参数使用<span lang="EN-US">git push了。</span></span></span></span></span></p><hr><h1 id="本地分支代码提交到远端库"><a href="#本地分支代码提交到远端库" class="headerlink" title="本地分支代码提交到远端库"></a>本地分支代码提交到远端库</h1><p>git push origin master<br>git push origin HEAD:refs/for/远端分支名</p><p>git push origin 本地分支名:refs/for/远端分支名</p><p>eg:<br>git push origin test:refs/for/master  #本地test分支代码提交到远端master库</p><hr><p><strong>在远端服务器新建分支：</strong></p><p><strong>方法1：</strong></p><p>git checkout -b dev</p><p>#建立本地到上游（远端）仓的链接 –这样代码才能提交上去<br>git branch –set-upstream-to=origin/dev<br>git branch –set-upstream debug origin/debug //其中debug为创建的分支<br>git push origin dev</p><p>#取消对master的跟踪<br>git branch –unset-upstream master</p><p>&nbsp;</p><p><strong>方法2：</strong></p><p>git branch -b stage2<br>git push origin 本地分支名:远端分支名xx&nbsp; // 在服務器新建新分支名xxx</p><p>&nbsp;</p><p>对比：</p><p>git branch -b stag2<br>git push origin stage2:refs/for/stage2   // 代码入庫命令，不会新建新分支在远端</p></div>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢迎！</title>
      <link href="/2019/02/22/hello-world/"/>
      <url>/2019/02/22/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="欢迎来到我的博客，我是程序员张翔宇"><a href="#欢迎来到我的博客，我是程序员张翔宇" class="headerlink" title="欢迎来到我的博客，我是程序员张翔宇"></a>欢迎来到我的博客，我是程序员张翔宇</h2><p><img src="http://bmob-cdn-23872.b0.upaiyun.com/2019/02/22/2b7b08d940e92d56803a42a1dae38bc1.jpg" alt>我来自江苏镇江，请多多指教！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
